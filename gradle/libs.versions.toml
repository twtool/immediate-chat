[versions]
agp = "8.2.2"

android-compileSdk = "34"
android-minSdk = "32"
android-targetSdk = "34"

androidx-activity-compose = "1.8.2"
androidx-appcompat = "1.6.1"
androidx-window = "1.2.0"

compose = "1.6.1"
compose-compiler = "1.5.8"
compose-plugin = "1.6.0-rc03" # https://github.com/JetBrains/compose-multiplatform/releases
exposed = "0.47.0"
kotlin = "1.9.22"
kotlinx-io = "0.3.1"
kotlinx-serialization-json = "1.6.2"
kotlinx-datetime = "0.5.0"
ksp = "1.9.22-1.0.17"
ktor = "2.3.8"
ktor-cloud = "1.0.0-SNAPSHOT"
logback = "1.4.14"
mmkv = "1.3.3"
mmkv-jvm = "1.0-SNAPSHOT"
mysql = "8.3.0"
slf4j-api = "2.0.11"
snakeyaml = "2.2"
startup-runtime = "1.1.1"

[libraries]
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity-compose" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-window = { module = "androidx.window:window", version.ref = "androidx-window"}

exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-kotlin-datetime = { module = "org.jetbrains.exposed:exposed-kotlin-datetime", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }

kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlinx-io-core = { module = "org.jetbrains.kotlinx:kotlinx-io-core", version.ref = "kotlinx-io" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization-json" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }

ksp = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }

ktor-cloud-application = { module = "icu.twtool.ktor.cloud:application", version.ref = "ktor-cloud" }
ktor-cloud-client-kmp = { module = "icu.twtool.ktor.cloud:client-kmp", version.ref = "ktor-cloud" }
ktor-cloud-discovery-polaris = { module = "icu.twtool.ktor.cloud:discovery-polaris", version.ref = "ktor-cloud" }
ktor-cloud-exposed = { module = "icu.twtool.ktor.cloud:exposed", version.ref = "ktor-cloud" }
ktor-cloud-redis = { module = "icu.twtool.ktor.cloud:redis", version.ref = "ktor-cloud" }
ktor-cloud-http-core = { module = "icu.twtool.ktor.cloud:http-core", version.ref = "ktor-cloud" }
ktor-cloud-http-ksp = { module = "icu.twtool.ktor.cloud:http-ksp", version.ref = "ktor-cloud" }
ktor-cloud-route-service = { module = "icu.twtool.ktor.cloud:route-service", version.ref = "ktor-cloud" }
ktor-cloud-route-service-ksp = { module = "icu.twtool.ktor.cloud:route-service-ksp", version.ref = "ktor-cloud" }
ktor-cloud-route-gateway = { module = "icu.twtool.ktor.cloud:route-gateway", version.ref = "ktor-cloud" }

logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
mmkv = { module = "com.tencent:mmkv", version.ref = "mmkv" }
mmkv-jvm = { module = "icu.twtool:mmkv-jvm", version.ref = "mmkv-jvm" }
mysql = { module = "com.mysql:mysql-connector-j", version.ref = "mysql" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j-api" }
snakeyaml = { module = "org.yaml:snakeyaml", version.ref = "snakeyaml" }
startup-runtime = { module = "androidx.startup:startup-runtime", version.ref = "startup-runtime" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }

kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }

ktor = { id = "io.ktor.plugin", version.ref = "ktor" }

jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }